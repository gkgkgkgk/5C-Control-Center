{"version":3,"sources":["HelperFunctions/Lights/lights.js","Components/SleepScreen/toggle.js","HelperFunctions/weather.js","Components/SleepScreen/clock.js","Components/SleepScreen/index.js","Components/MainScreen/ColorPicker/minislider.js","Components/MainScreen/ColorPicker/modetoggle.js","Components/MainScreen/ColorPicker/slider.js","Components/MainScreen/ColorPicker/index.js","Components/MainScreen/Groups/card.js","Components/MainScreen/Groups/ToggleGroup.js","Components/MainScreen/Groups/index.js","Components/MainScreen/index.js","App.js","index.js"],"names":["socket","io","callbacks","on","res","forEach","callback","isAllLightsOff","a","axios","get","changeLights","lights","isGroup","color","sat","brightness","newState","post","lampOnPath","lampOffPath","Toggle","refrence","onChange","style","toggle","useState","path","setPath","useEffect","onClick","className","height","width","src","ref","keys","require","weather","getWeather","d","Clock","textSize","Date","toLocaleTimeString","time","setTime","setWeather","updateTime","setTimeout","updateWeather","w","Math","round","data","main","temp","killId","i","clearInterval","textAlign","fontSize","SleepScreen","toggleView","state","setState","id","setId","toggleRef","useRef","exStateUpdate","push","uuidv4","length","window","addEventListener","changeView","uid","filter","target","current","backgroundColor","margin","display","justifyContent","flexDirection","Minislider","type","updateLights","value","setValue","initialBrightness","y","yVal","styles","track","active","axis","yreverse","ymin","ymax","val","onDragEnd","toString","padStart","Modetoggle","g","gradient","rgb","Slider","hexColor","setHexColor","startColor","cpp","x","mousePos","setMousePos","startPos","setStartPos","change","setChange","pos","setPos","lastPos","setLastPos","setColor","posRef","React","updateMousePos","ev","clientX","clientY","removeEventListener","p","onMouseDown","preventDefault","onMouseUp","boxShadow","borderRadius","background","userSelect","position","left","marginLeft","zIndex","transition","pointerEvents","top","transform","bottom","ColorPicker","colorVars","satVars","brightnessVars","marginTop","defaultStyle","flex","border","selectedStyle","fontWeight","unselectedStyle","Card","checked","Name","outerStyle","centerBulb","rightBulb","leftBulb","ToggleGroup","swap","console","log","devices","device_keys","key","groups","members","Groups","setActive","setIsGroup","scrolling","setScrolling","scrollBarTop","scrollBarBot","scrollingRef","lastPosRef","updateList","reduce","acc","name","onMouseMove","e","scrollBy","buildCheckbox","paddingLeft","borderStyle","overflow","overflowX","overflowY","_","map","MainScreen","timeoutTime","lastClick","hexSat","setHexSat","hexBrightness","setHexBrightness","updateClick","timeoutFunction","App","isSleep","setSleep","toggleSleep","fontFamily","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d639d31.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst socket = io(\"http://localhost:8080/\");\r\nlet callbacks = [];\r\n\r\nsocket.on(\"update\", (res) => {\r\n    // console.log(\"update recived\")\r\n    // console.log(callbacks)\r\n    callbacks.forEach(({ callback }) => {\r\n        // console.log(callback)\r\n        // if (typeof callback === \"function\") \r\n        callback(res);\r\n    });\r\n})\r\n\r\nexport const update = (callback) => {\r\n    // console.log(\"funtion added\");\r\n    callbacks.push({\r\n        id: uuidv4(),\r\n        callback\r\n    })\r\n    return callbacks[callbacks.length - 1].id;\r\n}\r\n\r\nexport const removeUpdate = uid => {\r\n    callbacks = callbacks.filter(({ id }) => (id !== uid));\r\n}\r\n\r\nexport const isAllLightsOff = async () => {\r\n    return axios.get(\"http://localhost:8080/isOneLightOn\");\r\n}\r\n\r\nexport const toggleAllLights = (value) => {\r\n    if (value) {\r\n        axios.get(\"http://localhost:8080/turnOnAllLights\")\r\n    } else {\r\n        axios.get(\"http://localhost:8080/turnOffAllLights\");\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const changeLights = async (lights, isGroup, color, sat, brightness) => {\r\n    let newState = `0${color}0${sat}0${brightness}`;\r\n\r\n    const res = await axios.post(\"http://localhost:8080/changeLights\", { newState, lights, isGroup });\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nconst lampOnPath = \"./assets/svg/lampOn.svg\";\r\nconst lampOffPath = \"./assets/svg/lampOff.svg\";\r\n\r\nconst Toggle = ({ refrence, onChange, style, toggle }) => {\r\n    // const [toggle, setToggle] = useState(inital);\r\n    const [path, setPath] = useState(toggle ? lampOnPath : lampOffPath);\r\n\r\n    const changeToggle = () => {\r\n        onChange(!toggle);\r\n        // setPath(!toggle ? lampOnPath : lampOffPath);\r\n        // setToggle(!toggle);\r\n        // console.log(path);\r\n    }\r\n    useEffect(() => {\r\n        setPath(toggle ? lampOnPath : lampOffPath);\r\n    }, [toggle])\r\n\r\n    return (\r\n        <div onClick={changeToggle} className=\"toggle\" style={style} >\r\n            <img height=\"100em\" width=\"100em\" src={path} ref={refrence}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle;","import axios from 'axios';\r\nconst keys = require(\"../env/keys.json\");\r\n\r\nconst path = `https://api.openweathermap.org/data/2.5/weather?zip=10003&appid=${keys.weather}`;\r\n\r\n\r\nexport const getWeather = async () => {\r\n    const d = await axios.get(path);\r\n    // console.log(d); \r\n    return d;\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport {getWeather} from '../../HelperFunctions/weather'; \r\n\r\n\r\nconst Clock = ({ textSize = 7 }) => {\r\n    const [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    const [weather,setWeather] = useState(5); \r\n\r\n    const updateTime = () => {\r\n        setTime(new Date().toLocaleTimeString());\r\n        setTimeout(updateTime, 1000)\r\n    }\r\n\r\n    const updateWeather = async ()=>{\r\n        const w = await getWeather(); \r\n        setWeather(Math.round(((w.data.main.temp-273.15)*(1.8))+32)); \r\n        setTimeout(updateWeather, 10800000)\r\n    }\r\n    useEffect(() => {\r\n\r\n        setTimeout(updateTime, 1000);\r\n        updateWeather(); \r\n        \r\n        return function cleanup() {\r\n            const killId = setTimeout(() => {\r\n                for (let i = killId; i > 0; i--) clearInterval(i)\r\n            }, 0)\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ color: 'white', textAlign:'center'}}>\r\n            <div style ={{fontSize: `${textSize}em`}}>{time} </div>\r\n            <br />\r\n            It is {weather} degrees in New York City\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock; ","import React, { useState, useRef, useEffect } from 'react';\r\nimport { isAllLightsOff, toggleAllLights, update, removeUpdate } from '../../HelperFunctions/Lights/lights';\r\nimport Toggle from './toggle.js';\r\nimport Clock from './clock.js';\r\n\r\n\r\nconst SleepScreen = ({ toggleView }) => {\r\n\r\n    const [state, setState] = useState(false);\r\n    const [id, setId] = useState(null);\r\n    const toggleRef = useRef(null);\r\n\r\n\r\n    const onUpdate = () => {\r\n        toggleAllLights(!state);\r\n        setState(!state);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(\"use effect for sleep screen is running\")\r\n        setId(update(exStateUpdate));\r\n        window.addEventListener(\"click\", changeView);\r\n        (async () => {\r\n            const data = await isAllLightsOff();\r\n            setState(data.data)\r\n        })()\r\n        return function cleanup() {\r\n            removeUpdate(id);\r\n        }\r\n    }, []);\r\n\r\n    const exStateUpdate = async res => {\r\n        const data = await isAllLightsOff();\r\n        setState(data.data)\r\n    }\r\n\r\n    const changeView = ({ target }) => {\r\n        if (toggleRef.current != target)\r\n            toggleView();\r\n    }\r\n\r\n\r\n    return (\r\n        // <Clock />\r\n        <div style={{ backgroundColor: \"black\", height: \"100%\", margin: 0, display: 'flex', justifyContent: 'center' }}>\r\n            <div style={{ display: 'flex', flexDirection: \"column\" }}>\r\n                <div style={{ height: '33%' }} />\r\n                <Clock />\r\n                <Toggle\r\n                    refrence={toggleRef}\r\n                    onChange={onUpdate}\r\n                    style={{ textAlign: 'center' }}\r\n                    toggle={state}\r\n                />\r\n                <div style={{ height: '33%' }} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SleepScreen;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Slider from 'react-input-slider';\r\n\r\nconst Minislider = ({ type, value, setValue, updateLights, height = 180, initialBrightness = 100 }) => {\r\n    //initialBrightness = value;\r\n    const [state, setState] = useState({ y: initialBrightness });\r\n    let yVal = {};\r\n\r\n\r\n    const onMouseUp = () => {\r\n        updateLights({ type, value: yVal?.y?.toString(16)?.padStart(3, '0') });\r\n    }\r\n\r\n    const onChange = val => {\r\n        yVal = val;\r\n        setState(val);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Slider styles={{ track: { height: height, backgroundColor: 'white', backgroundColor: 'rgba(255,255,255,0.5)' }, active: { backgroundColor: 'rgba(0,0,255,1.0)', backgroundColor: 'white' } }} axis=\"y\" yreverse ymin={0} ymax={1000} y={state.y} onChange={onChange} onDragEnd={onMouseUp} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Minislider;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Modetoggle = () => {\r\n    const [state, setState] = useState(true);\r\n\r\n    const handleToggle = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modetoggle;","import React, { useState, useEffect, useRef } from 'react';\r\nimport gradient from 'tinygradient';\r\n\r\nconst g = gradient(['#ff0000', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#ff00ff', '#ff0000']).rgb(358);\r\n\r\nconst Slider = ({ hexColor, setHexColor, updateLights, startColor = 179, width = 714, cpp = 2 }) => {\r\n    //startColor = g[parseInt('0x' + hexColor, 16)];\r\n\r\n    const [mousePos, setMousePos] = useState({ x: null, y: null })\r\n    const [startPos, setStartPos] = useState({ x: null, y: null })\r\n    const [change, setChange] = useState(false);\r\n    const [pos, setPos] = useState(startColor);\r\n    const [lastPos, setLastPos] = useState(startColor);\r\n    const [color, setColor] = useState(g[startColor]);\r\n\r\n    const posRef = React.useRef(pos);\r\n\r\n    const updateMousePos = ev => {\r\n        setMousePos({ x: ev.clientX, y: ev.clientY });\r\n    };\r\n\r\n    const updateMouseUp = ev => {\r\n        // console.log(posRef.current);\r\n        setLastPos(posRef.current);\r\n        setChange(false);\r\n        //setHexColor(posRef.current.toString(16).padStart(3, '0'));\r\n        updateLights({ type: \"color\", value: posRef.current.toString(16).padStart(3, '0') });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousemove\", updateMousePos);\r\n        // window.addEventListener(\"mouseup\", updateMouseUp);\r\n\r\n        return () => { window.removeEventListener(\"mousemove\", updateMousePos); /*window.removeEventListener(\"mouseup\", updateMouseUp);*/ };\r\n    }, []);\r\n\r\n    const mouseDown = ev => {\r\n        ev.preventDefault();\r\n        // console.log(pos);\r\n        setChange(true);\r\n        setStartPos({ x: ev.clientX, y: ev.clientY });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (change) {\r\n            let d = mousePos.x - startPos.x;\r\n            let p = lastPos + Math.round(d / cpp);\r\n\r\n            if (p > 357) {\r\n                p -= (358);\r\n            } else if (p < 0) {\r\n                p += (358);\r\n            }\r\n\r\n            setColor(g[p]);\r\n            setPos(p);\r\n            posRef.current = p;\r\n        }\r\n    }, [mousePos])\r\n\r\n    return (\r\n        <div className='sliderbody' style={{ width: '100%', height: '100%' }}>\r\n            <div onMouseDown={mouseDown} onMouseUp={updateMouseUp} style={{\r\n                boxShadow: '0 0 5px 5px rgba(0,0,0,0.3)',\r\n                borderRadius: change ? '5px' : '50%',\r\n                height: change ? \"200px\" : \"180px\",\r\n                background: change ? `repeating-linear-gradient(\r\n                90deg,\r\n                #ff0000 ${pos * cpp - (cpp * 357 / 2)}px,\r\n                #ff00ff ${pos * cpp - (cpp * 357 / 3)}px,\r\n                #0000ff ${pos * cpp - (cpp * 357 / 6)}px,\r\n                #00ffff ${pos * cpp}px,\r\n                #00ff00 ${pos * cpp + (cpp * 357 / 6)}px,\r\n                #ffff00 ${pos * cpp + (cpp * 357 / 3)}px,\r\n                #ff0000 ${pos * cpp + (cpp * 357 / 2)}px` : color, userSelect: 'none',\r\n                textAlign: 'center',\r\n                position: 'fixed',\r\n                left: '50%',\r\n                marginLeft: change ? `-${width / 2}px` : '-90px',\r\n                width: change ? width : \"180px\", zIndex: 100,\r\n                transition: 'borderRadius 0.2s, width 0.2s, margin-left 0.2s, height 0.2s, background 0.2s ease-in'\r\n            }}>\r\n                <img src=\"../assets/svg/arrow.svg\" style={{ pointerEvents: 'none', marginLeft: '-1.5em', left: '50%', top: '-25px', height: '3em', transform: 'rotate(180deg)', position: 'absolute', display: change ? 'block' : 'none' }}></img>\r\n                <img src=\"../assets/svg/arrow.svg\" style={{ pointerEvents: 'none', marginLeft: '-1.5em', left: '50%', bottom: '-25px', height: '3em', position: 'absolute', display: change ? 'block' : 'none' }}></img>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Slider;","import React, { useState, useEffect } from 'react';\r\nimport MiniSlider from './minislider';\r\nimport Modetoggle from './modetoggle';\r\nimport Slider from './slider';\r\n\r\nconst ColorPicker = ({ change, colorVars, satVars, brightnessVars, updateLights }) => {\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: \"column\", height: '75%' }}>\r\n\r\n            <div style={{ height: '40%', display: 'flex', flexDirection: \"row\", justifyContent: 'center' }}>\r\n                <div style={{ marginTop: '20px', width: '35%' }}></div>\r\n                <div style={{ marginTop: '20px', width: '15%', textAlign: 'center' }}>\r\n                    <MiniSlider type=\"sat\" value={satVars[0]} setValue={satVars[1]} updateLights={updateLights}></MiniSlider>\r\n                </div>\r\n                <div style={{ marginTop: '20px', width: '20%' }}>\r\n                    <Slider hexColor={colorVars[0]} setHexColor={colorVars[1]} updateLights={updateLights}></Slider>\r\n                </div>\r\n                <div style={{ marginTop: '20px', width: '15%', textAlign: 'center' }}>\r\n                    <MiniSlider type=\"brightness\" value={brightnessVars[0]} setValue={brightnessVars[1]} updateLights={updateLights}></MiniSlider>\r\n                </div>\r\n                <div style={{ marginTop: '20px', width: '35%' }}></div>\r\n            </div >\r\n            <div style={{ height: '20%', display: 'flex', flexDirection: \"row\", justifyContent: 'center' }}>\r\n                <Modetoggle></Modetoggle>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ColorPicker;","import React from 'react'; \r\n\r\n\r\nconst defaultStyle = {\r\n    flex:\"0 0 120px\",\r\n    height:\"50px\", \r\n    borderRadius: \"5px\",\r\n    border: \"1px solid black\",\r\n    textAlign: 'center',\r\n\r\n    \r\n}\r\n\r\nconst selectedStyle = {\r\n    fontWeight: '700'\r\n}\r\n\r\nconst unselectedStyle = {\r\n    fontWeight: '300'\r\n}\r\n\r\nconst Card = ({checked, Name, onClick})=>(\r\n    <div style={defaultStyle} onClick={()=>onClick(Name)} className={Name}>\r\n        <p><span style = {checked() ? selectedStyle:unselectedStyle}>{Name}</span></p>\r\n    </div>\r\n)\r\n\r\nexport default Card; ","import React,{useState, useEffect} from 'react';\r\n\r\nconst outerStyle = {\r\n    position:\"relative\",\r\n    left:\"-101px\",\r\n    top:\"101px\",\r\n    width:\"101px\",\r\n    height:\"101px\",\r\n    background: \"black\"\r\n}\r\n\r\nconst centerBulb = {\r\n    position:\"relative\",\r\n    top:\"25px\",\r\n    left:\"25px\",\r\n    zIndex:\"1\",\r\n}\r\n\r\nconst rightBulb = {\r\n    position:\"relative\",\r\n    top:\"25px\",\r\n    left:\"-10px\",\r\n    transform:\"rotate(45deg)\",\r\n}\r\n\r\nconst leftBulb = {\r\n    position:\"relative\",\r\n    top:\"-30px\",\r\n    left:\"10px\",\r\n    transform:\"rotate(-45deg)\",\r\n}\r\n\r\n\r\n\r\nconst ToggleGroup = ({swap, isGroup})=>{\r\n    const [path, setPath] = useState(isGroup ?\"../../../assets/svg/lampOn.svg\":\"../../../assets/svg/lampOff.svg\")\r\n\r\n    useEffect(()=>{setPath(!isGroup ?\"../../../assets/svg/lampOff.svg\":\"../../../assets/svg/lampOn.svg\"); console.log(`The Group is ${isGroup}`)},[isGroup]);\r\n    return (<div onClick={swap} style={outerStyle}>\r\n        <img src=\"../../../assets/svg/lampOn.svg\" width=\"50\" height=\"50\" style={centerBulb}/>\r\n        <img src={path} width=\"50\" height=\"50\" style={rightBulb}/>\r\n        <img src={path} width=\"50\" height=\"50\" style={leftBulb}/>\r\n    </div>  \r\n)}\r\n\r\nexport default ToggleGroup; ","import React, { useEffect, useState, useRef } from 'react'\r\nimport Card from \"./card\";\r\nimport ToggleGroup from \"./ToggleGroup\";\r\nconst devices = require(\"../../../env/devices.json\"/*\"../../../env/devices.json\"*/).device_keys.length % 2 !== 0 ? [...(require(\"./../../../env/devices.json\").device_keys), { Name: \"\", id: null, key: null }] : require(\"./../../../env/devices.json\").device_keys;\r\nconst groups = require(\"../../../env/groups.json\"/*\"../../../env/groups.json\"*/).groups % 2 !== 0 ? [...(require(\"./../../../env/groups.json\").groups), { Name: \"\", members: [] }] : require(\"./../../../env/groups.json\").groups;\r\n\r\nconst Groups = ({ active, setActive, isGroup, setIsGroup }) => {\r\n\r\n    const [scrolling, setScrolling] = useState(false);\r\n    const [lastPos, setLastPos] = useState(0);\r\n    const scrollBarTop = useRef(null);\r\n    const scrollBarBot = useRef(null);\r\n\r\n    const scrollingRef = useRef(scrolling);\r\n    const lastPosRef = useRef(lastPos);\r\n\r\n    const updateList = (Name) => {\r\n        if (Name === \"\") return;\r\n        if (!active.reduce((acc, name) => acc || (name === Name), false))\r\n            setActive([...active, Name]);\r\n        else\r\n            setActive(active.filter((name) => Name !== name));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mouseup\", onMouseUp);\r\n        return function cleanup() {\r\n            window.removeEventListener(\"mouseup\", onMouseUp);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"mousemove\", onMouseMove);\r\n        return function cleanup() {\r\n            window.removeEventListener(\"mousemove\", onMouseMove);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const onMouseDown = e => {\r\n        e.preventDefault();\r\n        // console.log(\"down\")\r\n        setScrolling(true);\r\n        scrollingRef.current = true;\r\n        setLastPos(e.clientX);\r\n        lastPosRef.current = e.clientX\r\n    }\r\n\r\n    const onMouseUp = e => {\r\n        e.preventDefault();\r\n        // console.log(\"up\")\r\n        // console.log(scrolling);\r\n        setScrolling(false);\r\n        scrollingRef.current = false;\r\n    }\r\n    const onMouseMove = e => {\r\n        // console.log(scrollingRef.current)\r\n        if (scrollingRef.current) {\r\n            scrollBarTop.current.scrollBy(-1 * (e.clientX - lastPosRef.current), 0)\r\n            scrollBarBot.current.scrollBy(-1 * (e.clientX - lastPosRef.current), 0)\r\n            setLastPos(e.clientX);\r\n            lastPosRef.current = e.clientX;\r\n        }\r\n    }\r\n\r\n    const swap = () => { setIsGroup(!isGroup); setActive([]); }\r\n\r\n    const buildCheckbox = ({ Name }) => (\r\n        <Card Name={Name} checked={() => (active.reduce((acc, name) => acc || (name === Name), false))} onClick={updateList} />\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form style={{\r\n                position: \"flex\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"-100px\",\r\n                borderStyle: 'solid',\r\n                overflow: 'hidden'\r\n            }}>\r\n                <ToggleGroup swap={swap} isGroup={isGroup} />\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <div style={{ display: \"flex\", fontSize: \"1em\", overflowX: 'hidden', overflowY: \"hidden\", width: \"100vw\" }} onMouseDown={onMouseDown} ref={scrollBarTop}>\r\n                        {isGroup ? groups.filter((_, i) => i % 2 === 0).map(buildCheckbox) : devices.filter((_, i) => i % 2 === 0).map(buildCheckbox)}\r\n                    </div>\r\n                    <div style={{ display: \"flex\", fontSize: \"1em\", overflowX: 'hidden', overflowY: \"hidden\", width: \"100vw\" }} onMouseDown={onMouseDown} ref={scrollBarBot}>\r\n                        {isGroup ? groups.filter((_, i) => i % 2 !== 0).map(buildCheckbox) : devices.filter((_, i) => i % 2 !== 0).map(buildCheckbox)}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Groups;","import React, { useState, useEffect } from 'react';\r\nimport ColorPicker from './ColorPicker';\r\nimport Groups from './Groups';\r\nimport { changeLights } from '../../HelperFunctions/Lights/lights';\r\n\r\nconst MainScreen = ({ toggleView, timeoutTime = 10000 }) => {\r\n    // const [lastClick, setLastClick] = useState(false);\r\n    let lastClick = false;\r\n    const [isGroup, setIsGroup] = useState(true);\r\n    const [active, setActive] = useState([]);\r\n    const [hexColor, setHexColor] = useState('001');\r\n    const [hexSat, setHexSat] = useState('3e8');\r\n    const [hexBrightness, setHexBrightness] = useState('3e8');\r\n\r\n    const updateClick = () => {\r\n        // console.log(\"click has run\")\r\n        // setLastClick(true);\r\n        lastClick = true;\r\n        // console.log(lastClick);\r\n    }\r\n    const timeoutFunction = () => {\r\n        // console.log(lastClick);\r\n        if (lastClick) {\r\n            // setLastClick(false);\r\n            lastClick = false;\r\n            setTimeout(timeoutFunction, timeoutTime)\r\n        } else\r\n            toggleView();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(timeoutFunction, timeoutTime);\r\n        window.addEventListener(\"click\", updateClick);\r\n        return function cleanup() {\r\n            const killId = setTimeout(() => {\r\n                for (let i = killId; i > 0; i--) clearInterval(i)\r\n            }, 0)\r\n        }\r\n    }, [])\r\n\r\n    const updateLights = ({ type, value }) => {\r\n        if (type === \"color\") {\r\n            changeLights(active, isGroup, value, hexSat, hexBrightness);\r\n            setHexColor(value);\r\n        }\r\n        else if (type === \"brightness\") {\r\n            changeLights(active, isGroup, hexColor, hexSat, value);\r\n            setHexBrightness(value);\r\n        }\r\n        else if (type === \"sat\") {\r\n            changeLights(active, isGroup, hexColor, value, hexBrightness);\r\n            setHexSat(value);\r\n        }\r\n        // else\r\n        //     changeLights([\"Hallway light\", \"Living Room 1\"], false, hexColor, hexSat, hexBrightness);\r\n    }\r\n\r\n    return (\r\n        //filter: 'blur(5px)'\r\n        <div style={{ height: '100%', background: 'linear-gradient(45deg, #1870ed 0, #f18f88 100%)' }}>\r\n            <ColorPicker colorVars={[hexColor, setHexColor]} satVars={[hexSat, setHexSat]} brightnessVars={[hexBrightness, setHexBrightness]} updateLights={updateLights} />\r\n            <Groups active={active} isGroup={isGroup} setActive={setActive} setIsGroup={setIsGroup} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MainScreen","import React, { useState } from 'react';\nimport SleepScreen from './Components/SleepScreen';\nimport MainScreen from './Components/MainScreen';\nconst App = () => {\n\n  const [isSleep, setSleep] = useState(true);\n\n  const toggleSleep = () => {\n    setSleep(!isSleep);\n  }\n\n\n  return (\n    <div style={{ height: \"100vh\", fontFamily: 'Poppins' }}>\n      {isSleep ? <SleepScreen toggleView={toggleSleep} /> : <MainScreen toggleView={toggleSleep} />}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport {render} from 'react-dom';\n\nimport App from './App';\n\nrender(\n  <App />,\n  document.getElementById('app')\n);"],"sourceRoot":""}